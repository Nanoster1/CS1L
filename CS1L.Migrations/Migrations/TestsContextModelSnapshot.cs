// <auto-generated />
using CS1L.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CS1L.Migrations.Migrations
{
    [DbContext(typeof(TestsContext))]
    partial class TestsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CS1L.Shared.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_tests");

                    b.ToTable("tests", (string)null);
                });

            modelBuilder.Entity("CS1L.Shared.Models.Test", b =>
                {
                    b.OwnsMany("CS1L.Shared.Models.Question", "Questions", b1 =>
                        {
                            b1.Property<int>("TestId")
                                .HasColumnType("integer")
                                .HasColumnName("test_id");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasColumnName("id");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("ImageUrl")
                                .HasColumnType("text")
                                .HasColumnName("image_url");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("text");

                            b1.HasKey("TestId", "Id")
                                .HasName("pk_question");

                            b1.ToTable("question", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("TestId")
                                .HasConstraintName("fk_question_tests_test_id");

                            b1.OwnsMany("CS1L.Shared.Models.Answer", "Answers", b2 =>
                                {
                                    b2.Property<int>("QuestionTestId")
                                        .HasColumnType("integer")
                                        .HasColumnName("question_test_id");

                                    b2.Property<int>("QuestionId")
                                        .HasColumnType("integer")
                                        .HasColumnName("question_id");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .HasColumnName("id");

                                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b2.Property<int>("Id"));

                                    b2.Property<bool>("IsCorrect")
                                        .HasColumnType("boolean")
                                        .HasColumnName("is_correct");

                                    b2.Property<string>("Text")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("text");

                                    b2.HasKey("QuestionTestId", "QuestionId", "Id")
                                        .HasName("pk_answer");

                                    b2.ToTable("answer", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("QuestionTestId", "QuestionId")
                                        .HasConstraintName("fk_answer_question_question_test_id_question_id");
                                });

                            b1.Navigation("Answers");
                        });

                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
