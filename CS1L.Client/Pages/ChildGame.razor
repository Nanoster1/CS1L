@page "/{TestId}/user/{NumberQuestion}"
@using CS1L.Shared.Models.Tests
<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />

<MudImage Src="images/name.png" Alt="VQuiz" Elevation="25" Class="rounded-lg"
          Style="height:5vh; width:auto; top:5px; position: absolute;"/>

<MudContainer Style="width: 85vw;">
<MudText Style="text-align: justify;" Typo="Typo.subtitle1">
    subtitle1. Lorem ipsum dolor sit amet, consectetur
    adipisicing elit. Quos blanditiis tenetur</MudText>

<MudChipSet @bind-SelectedChip="selected" Filter="true" 
            Style="display: flex; flex-direction:column; width: 80vw; padding-bottom: 20px;">
    @for (int i = 0; i < Chips.Length; i++)
    {
        <MudChip Style="height: 10vh;" Color="@colors[i]" Text="@Chips[i].Text"></MudChip>
    }
</MudChipSet >
</MudContainer>


@code{

    private bool _isDarkMode;

    private MudTheme _theme = new();

    private MudThemeProvider _mudThemeProvider;

    private Color[] colors = new Color[] { Color.Primary, Color.Secondary, Color.Tertiary, Color.Warning };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }
    public Question Question = new Question();
    MudChip selected;
    
    MudChip[] Chips = new MudChip[4];

    protected override void OnInitialized()
    {
        Question = new Question()
        {
            Text = "ахахах",
            Answers = new List<Answer>()
            {
                new Answer()
                {
                    Text = "111",
                    IsCorrect = false
                },
                new Answer()
                {
                    Text = "222",
                    IsCorrect = false
                },
                new Answer()
                {
                    Text = "333",
                    IsCorrect = true
                },
                new Answer()
                {
                    Text = "444",
                    IsCorrect = false
                },
            }
        };


        Chips = new MudChip[4];
        for (int i = 0; i < Question.Answers.Count; i++)
        {
            Chips[i] = new MudChip();
            Chips[i].Text = String.Copy(Question.Answers[i].Text);
        }


        StateHasChanged();
    }

    void EndTime()
    {
        for (int i = 0; i < Question.Answers.Count; i++)
        {
            if (Question.Answers[i].IsCorrect)
            {
                Chips[i].Disabled = Question.Answers[i].IsCorrect;
                Chips[i].Color = Color.Dark;
            }
                
        }
        StateHasChanged();
    }

}