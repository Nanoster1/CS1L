@page "/"
@inject NavigationManager NavigationManager 

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
<PageTitle>Index</PageTitle>

<MudImage Src="images/name.png" Alt="VQuiz" Elevation="0" Class="rounded-lg"
          Style="height:5vh; width:auto; top:5px; position: absolute;" />

<MudContainer Class="container d-flex flex-column gap-10" Style="width:60vw;">
    <MudButton OnClick="ShowCreateTestMessage" Variant="Variant.Outlined" Color="Color.Primary">Новый тест</MudButton>
    <MudButton OnClick="ShowConnectMessage" Variant="Variant.Outlined" Color="Color.Primary">Присоединиться</MudButton>
    <MudButton OnClick="GoTableTests" Variant="Variant.Outlined" Color="Color.Primary">Все тесты</MudButton>
</MudContainer>

<MudMessageBox @ref="ConnectBox" Title="Вход" CancelText="Отмена">
    <MessageContent>
        <MudText>Введите ключ:</MudText>
        <MudTextField @bind-Value="ConnectKey" ></MudTextField>
    </MessageContent>
    <YesButton>
        <MudButton Variant="Variant.Text" Color="Color.Primary" >Присоединиться</MudButton>
    </YesButton>
</MudMessageBox>

<MudMessageBox @ref="NameTestBox" Title="Создать Тест" CancelText="Отмена">
    <MessageContent>
        <MudText>Введите название теста:</MudText>
        <MudTextField @bind-Value="NameTest" ></MudTextField>
    </MessageContent>
    <YesButton>
        <MudButton Variant="Variant.Text" Color="Color.Error" >Продолжить</MudButton>
    </YesButton>
</MudMessageBox>

@code{
    private bool _isDarkMode;
    public string NameTest = String.Empty;
    public string ConnectKey = String.Empty;
    private MudThemeProvider _mudThemeProvider;
    MudMessageBox ConnectBox { get; set; }
    MudMessageBox NameTestBox { get; set; }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }
   
    
    private async Task ShowConnectMessage()
    {
        bool? result = await ConnectBox.Show();
        if(result == true && !string.IsNullOrWhiteSpace(ConnectKey))
        {
            NavigationManager.NavigateTo($"{ConnectKey}/lobby/user");
        }
        StateHasChanged();
    }
    
    private async Task ShowCreateTestMessage()
    {
        bool? result = await NameTestBox.Show();
        Console.WriteLine(result == true && string.IsNullOrWhiteSpace(NameTest));
        if (result == true && !string.IsNullOrWhiteSpace(NameTest))
        {
            NavigationManager.NavigateTo($"/create/{NameTest}");
        }
        StateHasChanged();
    }
    
    
    
    private async Task GoTableTests()
    {
        NavigationManager.NavigateTo("/table");
    }
}